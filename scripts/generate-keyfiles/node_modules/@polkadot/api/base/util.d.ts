import type { ApiInterfaceRx } from '@polkadot/api/types';
import type { InterfaceTypes } from '@polkadot/types/types';
import { Observable } from '@polkadot/x-rxjs';
declare type DetectedKeys = keyof Pick<InterfaceTypes, 'AccountInfo' | 'ValidatorPrefs'>;
declare type DetectedValues = keyof InterfaceTypes;
interface DetectedTypes extends Record<DetectedKeys, DetectedValues> {
    AccountInfo: 'AccountInfoWithRefCount' | 'AccountInfoWithProviders';
    ValidatorPrefs: 'ValidatorPrefsWithBlocked' | 'ValidatorPrefsWithCommission';
}
/**
 * @description Query the chain for the specific capabilities
 */
export declare function detectedCapabilities(api: ApiInterfaceRx, blockHash?: Uint8Array | string | undefined): Observable<Partial<DetectedTypes>>;
export {};
