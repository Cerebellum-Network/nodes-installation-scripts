// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
import { combineLatest, of } from '@polkadot/x-rxjs';
import { map, switchMap } from '@polkadot/x-rxjs/operators';
import { SignedBlockExtended } from "../type/index.mjs";
import { memo } from "../util/index.mjs";
/**
 * @name subscribeNewBlocks
 * @returns The latest block & events for that block
 */

export function subscribeNewBlocks(instanceId, api) {
  return memo(instanceId, () => api.derive.chain.subscribeNewHeads().pipe(switchMap(header => {
    const blockHash = header.hash;
    return combineLatest(api.rpc.chain.getBlock(blockHash), api.query.system.events.at(blockHash), of(header.validators));
  }), map(([block, events, validators]) => new SignedBlockExtended(api.registry, block, events, validators))));
}