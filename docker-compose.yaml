version: "2.4"

services:
  caddy:
    image: abiosoft/caddy:no-stats
    container_name: caddy
    restart: always
    environment:
      ACME_AGREE: "true"
    ports:
      - 9934:9934
      - 9945:9945
      - 80:80
      - 443:443
    volumes:
      - ./Caddyfile:/etc/Caddyfile
      - ./caddy:/root/.caddy
  generate_sr_key:
    container_name: generate_sr_key
    build:
      context: ./
      dockerfile: Dockerfile.subkey
    command: bash -c "subkey generate --scheme sr25519"
  generate_ed_key:
    container_name: generate_ed_key
    build:
      context: ./
      dockerfile: Dockerfile.subkey
    command: bash -c "subkey inspect --scheme ed25519 ''"
  create_chain_spec:
    container_name: create_chain_spec
    image: cerebellumnetwork/pos-node:v2.3.1
    user: root
    volumes:
      - ./spec-data:/cereio/spec-data
    command: bash -c "mkdir -p ~/spec && /usr/local/bin/cere build-spec --disable-default-bootnode --chain local > /cereio/spec-data/customSpec.json"

  create_raw_chain_spec:
    container_name: create_raw_chain_spec
    image: cerebellumnetwork/pos-node:v2.3.1
    user: root
    volumes:
      - ./spec-data:/cereio/spec-data
    command: bash -c "/usr/local/bin/cere build-spec --chain=/cereio/spec-data/customSpec.json --raw --disable-default-bootnode > /cereio/spec-data/customSpecRaw.json"
  boot_node:
    container_name: boot_node
    image: cerebellumnetwork/pos-node:${VERSION}
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
    ports:
      - "$HOST:9944:9944"
      - "$HOST:9933:9933"
      - "30333:30333"
    volumes:
      - ./spec-data:/cereio/spec-data
      - ./chain-data:/data
    command: bash -c "/usr/local/bin/cere -l${LOG_LEVEL} --name ${NODE_NAME} --chain /cereio/spec-data/${SPEC_PATH}/customSpecRaw.json --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0' --validator --ws-port 9944 --rpc-methods=Unsafe --ws-external --unsafe-ws-external --rpc-cors all --rpc-external"
  add_validation_node_custom:
    container_name: add_validation_node_custom
    image: cerebellumnetwork/pos-node:${VERSION}
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
    ports:
      - "$HOST:9944:9944"
      - "$HOST:9933:9933"
      - "30333:30333"
    volumes:
      - ./spec-data:/cereio/spec-data
      - ./chain-data:/data
    command: bash -c "/usr/local/bin/cere -l${LOG_LEVEL} --name ${NODE_NAME} --chain /cereio/spec-data/${SPEC_PATH}/customSpecRaw.json --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0' --validator --bootnodes /ip4/${BOOT_NODE_IP_ADDRESS}/tcp/30333/p2p/${NETWORK_IDENTIFIER} /ip4/${BOOT_NODE_IP_ADDRESS_2}/tcp/30333/p2p/${NETWORK_IDENTIFIER_2} --ws-port 9944 --rpc-methods=Unsafe --ws-external  --unsafe-ws-external --rpc-cors all --rpc-external"
  add_validator:
    container_name: add_validator
    image: add_validator_script
    environment:
      - "GENERATE_ACCOUNTS=${GENERATE_ACCOUNTS}"
      - "NETWORK=${NETWORK}"
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
    build:
      context: ./scripts
      dockerfile: add-validator/Dockerfile.addValidator
    command: npm run add-validator
  generate_accounts:
    container_name: generate_accounts
    image: generate_accounts
    user: root
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
    build:
      context: ./scripts/generate-accounts
      dockerfile: Dockerfile.generateAccounts
    volumes:
      - ./scripts/generate-accounts/accounts:/app/accounts
      - ./scripts/generate-accounts/keys:/app/keys
    command: npm run generate-accounts
  generate_emulations_chain_spec:
    container_name: generate_emulations_chain_spec
    image: generate_emulations_chain_spec
    user: root
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
    build:
      context: ./
      dockerfile: scripts/emulations/Dockerfile.generateEmulationsChainSpec
    volumes:
      - ./scripts/generate-accounts/accounts:/app/accounts
      - ./spec-data:/app/spec-data
    command: npm run generate-chain-spec
  execute_emulations:
    container_name: execute_emulations
    image: execute_emulations
    user: root
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
    build:
      context: ./scripts
      dockerfile: emulations/Dockerfile.emulations
    volumes:
      - ./scripts/generate-accounts/accounts:/app/accounts
    command: npm run emulations
  full_node:
    container_name: cere_full_node
    image: cerebellumnetwork/pos-node:${VERSION}
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
    ports:
      - "9944:9944"
      - "9933:9933"
      - "30333:30333"
    volumes:
      - ./spec-data:/cereio/spec-data
      - ./chain-data:/data
    command: bash -c "/usr/local/bin/cere -l${LOG_LEVEL} --name ${NODE_NAME} --chain /cereio/spec-data/${SPEC_PATH}/customSpecRaw.json --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0' --bootnodes /ip4/${BOOT_NODE_IP_ADDRESS}/tcp/30333/p2p/${NETWORK_IDENTIFIER} /ip4/${BOOT_NODE_IP_ADDRESS_2}/tcp/30333/p2p/${NETWORK_IDENTIFIER_2} --ws-port 9944 --ws-external --rpc-methods=Auto --rpc-cors all --rpc-external"
  archive_node:
    container_name: cere_archive_node
    image: cerebellumnetwork/pos-node:${VERSION}
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
    ports: 
      - "9944:9944"
      - "9933:9933"
      - "30333:30333"
    volumes:
      - ./spec-data:/cereio/spec-data
      - ./chain-data:/data
    command: bash -c "/usr/local/bin/cere -l${LOG_LEVEL} --name ${NODE_NAME} --chain /cereio/spec-data/${SPEC_PATH}/customSpecRaw.json --pruning archive --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0' --bootnodes /ip4/${BOOT_NODE_IP_ADDRESS}/tcp/30333/p2p/${NETWORK_IDENTIFIER} /ip4/${BOOT_NODE_IP_ADDRESS_2}/tcp/30333/p2p/${NETWORK_IDENTIFIER_2} --ws-port 9944 --rpc-methods=Unsafe --ws-external  --unsafe-ws-external --rpc-cors all --rpc-external"
    
